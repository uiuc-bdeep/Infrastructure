# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
BDEEP_ROOT=/usr/local/bdeep
INF_ROOT=/usr/local/bdeep/Infrastructure
VIRT_ENV=/usr/local/bdeep/virtualenvironments/main/bin/activate
AIR_JOB=/usr/local/bdeep/Infrastructure/projects/AirPollution/jobs
CONG_JOB=/usr/local/bdeep/Infrastructure/projects/Congestion/jobs
APT_JOB=/usr/local/bdeep/Infrastructure/projects/Apartments/jobs

BDEEP_RUN_LOGGING_ROOT=/var/log/bdeep
#
# m h  dom mon dow   command
0	3	*	*	* 	root 	$INF_ROOT/backup/updateRepo.sh > /tmp/updateRepo.out 2>&1
0	5	*	*	* 	admin 	. $VIRT_ENV && python -m bdeep.run $AIR_JOB/daily_script_air DEV >> /tmp/daily_script_air.log 2>&1
0	*	*	*	*	admin 	. $VIRT_ENV && python -m bdeep.run $AIR_JOB/hourly_script_air DEV >> /tmp/hourly_script_air.log 1>&1
0	5	*	*	*	admin 	$CONG_JOB/upload_vot.sh >> /tmp/upload_vot.log 2>&1
0	18	*	*	2,4	admin	$APT_JOB/placeofmine DEV >> /tmp/placeofmine.log 2>&1
